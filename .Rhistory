NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(NCData.sf, type="text", style="qje", digits=2,
title = "Variable Description Summary",
dep.var.labels = "Variables",
covariate.labels = c("Bedrooms", "Full Bathrooms", "Half Bathrooms", "Percent Area Heated", "Basement", "AC" , "Total Acres", "Sold 2021", "Sold 2022", "Sold 2020", "1 Story", "1.5 Stories", "2 Stories", "2.5 Stories", "3.0 Stories", "Bi-Level", "Cape Cod Style", "Ranch Style", "Split Level", "Fireplaces", "Heat", "Grade: Fair", "Grade: Average", "Grade: Good", "Grade: Very Good", "Grade: Excellent", "Grade: Custom", "Age", "Cornelius", "Davidson", "Huntersville", "Matthews", "Mint Hill", "Pineville", "Stallings", "Unincorporated",  "Units", "Sold Feb", "Sold Mar", "Sold Apr", "Sold May", "Sold Jun", "Sold Jul", "Sold Aug", "Sold Sept", "Sold Oct", "Sold Nov", "Sold Dec", "Grocery Store Exposure", "Improvement Project Exposure"))
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(IntrinsicFeatures,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features",
out.header = TRUE,
covariate.labels = c("Total finished area square feet",
"Design type - Ranch",
"Design type -  2-3 story",
"Design type - Bi-level",
"Design type - Multi-story-townhouse",
"Design type - Split-level",
"Quality - Average +",
"Quality - Average ++")
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(IntrinsicFeatures,)
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(IntrinsicFeatures,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features",
out.header = TRUE,
covariate.labels = c("Total finished area square feet",
"Design type - Ranch",
"Design type -  2-3 story",
"Design type - Bi-level",
"Design type - Multi-story-townhouse",
"Design type - Split-level",
"Quality - Average +",
"Quality - Average ++"))
# Present table of summary statistics with variable descriptions. Sort these variables by their category (internal characteristics, amenities/public services or spatial structure). Check out the `stargazer` package for this.
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(InternalCharacteristics,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features",
out.header = TRUE,
covariate.labels = c("Total finished area square feet",
"Design type - Ranch",
"Design type -  2-3 story",
"Design type - Bi-level",
"Design type - Multi-story-townhouse",
"Design type - Split-level",
"Quality - Average +",
"Quality - Average ++"))
# Present table of summary statistics with variable descriptions. Sort these variables by their category (internal characteristics, amenities/public services or spatial structure). Check out the `stargazer` package for this.
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(InternalCharacteristics,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features",
out.header = "TRUE",
covariate.labels = c("Total finished area square feet",
"Design type - Ranch",
"Design type -  2-3 story",
"Design type - Bi-level",
"Design type - Multi-story-townhouse",
"Design type - Split-level",
"Quality - Average +",
"Quality - Average ++"))
# Present table of summary statistics with variable descriptions. Sort these variables by their category (internal characteristics, amenities/public services or spatial structure). Check out the `stargazer` package for this.
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(InternalCharacteristics,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features",
covariate.labels = c("Total finished area square feet",
"Design type - Ranch",
"Design type -  2-3 story",
"Design type - Bi-level",
"Design type - Multi-story-townhouse",
"Design type - Split-level",
"Quality - Average +",
"Quality - Average ++"))
# Present table of summary statistics with variable descriptions. Sort these variables by their category (internal characteristics, amenities/public services or spatial structure). Check out the `stargazer` package for this.
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(InternalCharacteristics,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features")
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NPA, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grade) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Building Grade")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, Age) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Building Grade")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, percentheated) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Heated Area")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grocery_nn1) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Exposure to Grocery Stores")
## Nearest Neighbor Neighbor - grocery stores
NCData.sf <-
NCData.sf %>%
mutate(
grocery_nn1 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 1),
grocery_nn2 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 2),
grocery_nn3 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 3),
grocery_nn4 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 4),
grocery_nn5 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 5))
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grocery_nn1) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Exposure to Grocery Stores")
## Nearest Neighbor Neighbor - cap Improvement projects
NCData.sf <-
NCData.sf %>%
mutate(
proj_nn1 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 1),
proj_nn2 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 2),
proj_nn3 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 3),
proj_nn4 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 4),
proj_nn5 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 5))
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, percentheated) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Exposure to Capital Improvement Projects")
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NC_Data, aes(colour = q5(grade)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "grade"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "Age"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "Age"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NC_Data, aes(colour = q5(percentheated)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(percentheated)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "Age"),
name="Quintile\nBreaks") +
labs(title="Price by Building Age, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(percentheated)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Percent of Property Heated Area, Charlotte") +
mapTheme()
numericVars <-
select_if(nc_sub_200k, is.numeric) %>% na.omit()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(NCData.sf$grocery_nn1),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=qBr(NCData.sf,"grocery_nn1"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Boston") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(NCData.sf$grocery_nn1)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=qBr(NCData.sf,"grocery_nn1"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Boston") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(NCData.sf$grocery_nn1)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=qBr(NCData.sf,"grocery_nn1"),
name="Quintile\nBreaks") +
labs(title="Property Exposure to Grocery Stores, Charlotte") +
mapTheme()
numericVars <-
select_if(nc_sub_200k, is.numeric) %>% na.omit()
numericVars <-
select_if(NCData.sf, is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
type = "lower",
insig = "blank") +
labs(title = "Correlation across numeric variables")
numericVars <-
select_if(NCData.sf, is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
type = "lower",
insig = "blank") +
labs(title = "Correlation across numeric variables")
