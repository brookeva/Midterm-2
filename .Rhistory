NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(InternalCharacteristics,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features",
covariate.labels = c("Total finished area square feet",
"Design type - Ranch",
"Design type -  2-3 story",
"Design type - Bi-level",
"Design type - Multi-story-townhouse",
"Design type - Split-level",
"Quality - Average +",
"Quality - Average ++"))
# Present table of summary statistics with variable descriptions. Sort these variables by their category (internal characteristics, amenities/public services or spatial structure). Check out the `stargazer` package for this.
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(InternalCharacteristics,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features")
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NPA, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grade) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Building Grade")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, Age) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Building Grade")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, percentheated) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Heated Area")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grocery_nn1) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Exposure to Grocery Stores")
## Nearest Neighbor Neighbor - grocery stores
NCData.sf <-
NCData.sf %>%
mutate(
grocery_nn1 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 1),
grocery_nn2 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 2),
grocery_nn3 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 3),
grocery_nn4 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 4),
grocery_nn5 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 5))
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grocery_nn1) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Exposure to Grocery Stores")
## Nearest Neighbor Neighbor - cap Improvement projects
NCData.sf <-
NCData.sf %>%
mutate(
proj_nn1 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 1),
proj_nn2 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 2),
proj_nn3 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 3),
proj_nn4 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 4),
proj_nn5 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 5))
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, percentheated) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of Exposure to Capital Improvement Projects")
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NC_Data, aes(colour = q5(grade)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "grade"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "Age"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "Age"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NC_Data, aes(colour = q5(percentheated)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(percentheated)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "Age"),
name="Quintile\nBreaks") +
labs(title="Price by Building Age, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(percentheated)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Percent of Property Heated Area, Charlotte") +
mapTheme()
numericVars <-
select_if(nc_sub_200k, is.numeric) %>% na.omit()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(NCData.sf$grocery_nn1),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=qBr(NCData.sf,"grocery_nn1"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Boston") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(NCData.sf$grocery_nn1)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=qBr(NCData.sf,"grocery_nn1"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Boston") +
mapTheme()
ggplot() +
geom_sf(data = NPA.sf, fill = "white") +
geom_sf(data = NCData.sf, aes(colour = q5(NCData.sf$grocery_nn1)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=qBr(NCData.sf,"grocery_nn1"),
name="Quintile\nBreaks") +
labs(title="Property Exposure to Grocery Stores, Charlotte") +
mapTheme()
numericVars <-
select_if(nc_sub_200k, is.numeric) %>% na.omit()
numericVars <-
select_if(NCData.sf, is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
type = "lower",
insig = "blank") +
labs(title = "Correlation across numeric variables")
numericVars <-
select_if(NCData.sf, is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
type = "lower",
insig = "blank") +
labs(title = "Correlation across numeric variables")
numericVars <-
select_if(NC_data, is.numeric) %>% na.omit()
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 100)
library(tidyverse)
install.packages("tidycensus")
library(tidycensus)
library(dplyr)
library(sf)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(grid)
library(ggplot2)
library(gridExtra)
library(ggcorrplot) # plot correlation plot
library(corrr)      # another way to plot correlation plot
library(kableExtra)
library(jtools)     # for regression model plots
library(ggstance) # to support jtools plots
library(ggpubr)    # plotting R^2 value on ggplot point scatter
library(broom.mixed) # needed for effects plots
install.packages("stargazer")
library(stargazer)
# functions and data directory"
NC_Data = st_read("https://raw.githubusercontent.com/mafichman/MUSA_508_Lab/main/Midterm/data/2022/studentData.geojson")
head(NC_Data)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#ffffcc",
"#c7e9b4",
"#7fcdbb",
"#41b6c4",
"#2c7fb8",
"#253494")
ImprovProj <-
st_read("Capital_Improvement_Projects_Points.geojson") %>%
st_transform('ESRI:102286')
NPA <-
st_read("Proximity to Early Care and Education.geojson") %>%
st_transform('ESRI:102286')
NPA.sf <-
NPA %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
Groceries <- st_read("Grocery_Stores_(points).geojson")
NCData.sf <-
NC_Data %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
ImproveProj.sf <-
ImprovProj %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
Groceries.sf <-
Groceries %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
# Present table of summary statistics with variable descriptions. Sort these variables by their category (internal characteristics, amenities/public services or spatial structure). Check out the `stargazer` package for this.
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
Charlotte.test1 <- filter(NCData.sf, Age < 2022)
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
NCData.sf$heat <- ifelse(NCData.sf$aheatingty == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
NCData.sf$basement <- ifelse(NCData.sf$foundation == "BASEMENT", 1, 0)
InternalCharacteristics = model.matrix (~NCData.sf$price +
NCData.sf$bedrooms+
NCData.sf$fullbaths+
NCData.sf$halfbaths+
NCData.sf$percentheated+
NCData.sf$basement+
NCData.sf$ac+
NCData.sf$totalac+
NCData.sf$year+
NCData.sf$storyheigh+
NCData.sf$grade+
NCData.sf$numfirepla+
NCData.sf$Age+
NCData.sf$units+
NCData.sf$month- 1,
NCData.sf = trainData1) %>%
as.data.frame()
stargazer(IntrinsicFeatures,
type = "html",
digits = 1,
title = "Table 1. Summary statistics of predictors - intrinsic features",
out.header = TRUE,
covariate.labels = c("Total finished area square feet",
"Design type - Ranch",
"Design type -  2-3 story",
"Design type - Bi-level",
"Design type - Multi-story-townhouse",
"Design type - Split-level",
"Quality - Average +",
"Quality - Average ++")
numericVars1 <-
select_if(st_drop_geometry(NCData.sf), is.numeric) %>% na.omit() %>%dplyr::select(price, bedrooms,fullbaths, halfbaths, percentheated, basement, ac, totalac, year, storyheigh, numfirepla, heat,  grade, Age, municipali, units, month, grocery_nn1, proj_nn1)
numericVars1 <-
select_if(st_drop_geometry(NCData.sf), is.numeric) %>%
na.omit() %>%
dplyr::select(price, bedrooms,fullbaths, halfbaths, percentheated, basement, ac, totalac, year, storyheigh, numfirepla, heat,  grade, Age, municipali, units, month, grocery_nn1, proj_nn1)
numericVars1 <-
select_if(st_drop_geometry(NCData.sf), is.numeric) %>%
na.omit() %>%
dplyr::select(price, bedrooms,fullbaths, halfbaths, percentheated, basement, ac, totalac, year, storyheigh, numfirepla, heat,  grade, Age, municipali, units, month, grocery_nn1, proj_nn1)
View(NCData.sf)
numericVars1 <-
select_if(st_drop_geometry(NC_Data), is.numeric) %>%
na.omit() %>%
dplyr::select(price, bedrooms,fullbaths, halfbaths, percentheated, basement, ac, totalac, year, storyheigh, numfirepla, heat,  grade, Age, municipali, units, month, grocery_nn1, proj_nn1)
View(NC_Data)
View(NCData.sf)
numericVars1 <-
select_if(st_drop_geometry(NCData.sf), is.numeric) %>%
na.omit() %>%
dplyr::select(price, bedrooms,fullbaths, halfbaths, percentheated, basement, ac, totalac, year, storyheigh, numfirepla, heat,  grade, Age, municipali, units, month, grocery_nn1, proj_nn1)
numericVars1 <-
select_if(st_drop_geometry(NCData.sf), is.numeric) %>%
na.omit() %>%
dplyr::select(price, bedrooms,fullbaths, halfbaths, percentheated, basement, ac, totalac, storyheigh, numfirepla, heat,  grade, Age, municipali, units, month, grocery_nn1, proj_nn1)
numericVars1 <-
select_if(st_drop_geometry(NC_Data), is.numeric) %>%
na.omit() %>%
dplyr::select(price, bedrooms,fullbaths, halfbaths, percentheated, basement, ac, year, totalac, storyheigh, numfirepla, heat,  grade, Age, municipali, units, month, grocery_nn1, proj_nn1)
View(NC_Data)
# You can set some global options for knitting chunks
knitr::opts_chunk$set(echo = TRUE)
# Load some libraries
library(tidyverse)
library(dplyr)
library(sf)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(grid)
library(ggplot2)
library(gridExtra)
library(ggcorrplot) # plot correlation plot
library(corrr)      # another way to plot correlation plot
library(kableExtra)
library(jtools)     # for regression model plots
library(ggstance) # to support jtools plots
library(ggpubr)    # plotting R^2 value on ggplot point scatter
library(broom.mixed) # needed for effects plots
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
# functions and data directory"
NC_Data = st_read("https://raw.githubusercontent.com/mafichman/MUSA_508_Lab/main/Midterm/data/2022/studentData.geojson")
head(NC_Data)
palette5 <- c("#25CB10", "#5AB60C", "#8FA108",   "#C48C04", "#FA7800")
NCData.sf <-
NC_Data %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
ImprovProj <-
st_read("Capital_Improvement_Projects_Points.geojson") %>%
st_transform('ESRI:102286')
ImproveProj.sf <-
ImprovProj %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
Groceries <- st_read("Grocery_Stores_(points).geojson")
Groceries.sf <-
Groceries %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
# 1 map of your dependent variable (sale price)
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
# Map of Independent Variable - Building Grade
NC_Data$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
NC_Data$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NC_Data$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NC_Data$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NC_Data$year <- factor(NCData.sf$sale_year)
NC_Data$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
# Building Grade Map
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(grade)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("Charlotte,Grade"),
name="Quintile\nBreaks") +
labs(title="Grade, Charlotte") +
mapTheme()
# Age Map
ggplot()+
geom_sf(data = NCData.sf, aes(fill = NCData.sf),
color = "transparent")+
geom_sf(data = NCData.sf %>%
st_union(),
color = "grade",
fill = "transparent")+
labs(
title = "Percentage of vacant housing units by tract",
subtitle = "",
caption = "Data: US Census Bureau, ACS 5-year estimates")
numericVars <-
select_if(nc_sub_200k, is.numeric) %>% na.omit()
numericVars <-
select_if(nc_sub_200k, is.numeric) %>% na.omit()
numericVars <-
select_if(st_drop_geometry(NCData.sf), is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
type="lower",
insig = "blank") +
labs(title = "Correlation across numeric variables")
summary_table <- summary(reg1)
