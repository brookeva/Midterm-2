rbind(
tracts2016PHX %>%
filter(variable=="B06012_002") %>%
mutate(year=2016),
tracts2020PHX %>%
filter(variable=="B06012_002") %>%
mutate(year=2020))
ggplot() +
geom_sf(data = Pov16_20, aes(fill = q5(estimate), group=year), color=NA) +
scale_fill_manual(values = palette5,
labels = qBr(Pov16_20, "estimate"),
name = "Below 100% of the Poverty Level\n(Quintile Breaks)") +
facet_wrap(~year) +
labs(title = "Poverty", subtitle = "Phoenix; 2016 vs. 2020") +
mapTheme() + theme(plot.title = element_text(size=22)) +
geom_sf(data=PHXBuffers, color="red", fill=NA)
tracts2016PHX <-
tracts2016PHX %>%
dplyr::select( -NAME, -moe) %>%
spread(key = variable, value = estimate) %>%
rename(TotalPop = B25026_001,
Whites = B02001_002,
FemaleBachelors = B15001_050,
MaleBachelors = B15001_009,
MedHHInc = B19013_001,
MedRent = B25058_001,
TotalPoverty = B06012_002)
tracts2016PHX <-
tracts2016PHX %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop, 0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop), 0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2016") %>%
dplyr::select(-Whites,-FemaleBachelors,-MaleBachelors,-TotalPoverty)
tracts2020PHX <-
get_acs(geography = "tract",
variables = c("B25026_001E","B02001_002E",
"B15001_050E","B15001_009E",
"B19013_001E","B25058_001E",
"B06012_002E"),
year=2020, state=04, county=013,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E,
Whites = B02001_002E,
FemaleBachelors = B15001_050E,
MaleBachelors = B15001_009E,
MedHHInc = B19013_001E,
MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2020") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
allTractsPHX <- rbind(tracts2016PHX,tracts2020PHX)
#Making a feature of the light rail stops.
PHXstops <- st_read("https://services2.arcgis.com/2t1927381mhTgWNC/arcgis/rest/services/ValleyMetroLightRailRidership/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson") %>%
mutate(Line = "Valley Metro") %>%
dplyr::select(StationId, Line) %>%
st_transform('ESRI:102728')  #This was necessary in the lab, but we'll have to check what coordinate systems each set of data is in to see if we have to use this function to make CRS.
#Can only plot this once we bring in the ACS data for PHX
ggplot() +
geom_sf(data=st_union(allTractsPHX)) +
geom_sf(data=PHXstops,
aes(colour = Line),
show.legend = "point", size= 2) +
scale_colour_manual(values = c("orange","blue")) +
labs(title="Valley Metro Stops",
subtitle="Phoenix, AZ",
caption="Figure") +
mapTheme()
ggplot() +
facet_wrap(~Legend) +
geom_sf(data=PHXBuffers) +
geom_sf(data=PHXstops, show.legend = "point") +
mapTheme()
View(allTractsPHX)
ggplot() +
geom_sf(data=st_union(GroceryBuffers)) +
geom_sf(data=GroceryBuffers,
aes(colour = Legend
show.legend = "point", size= 2) +
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
View(NC_Data)
NC_Data$PricePerBldGrd <- NC_Data$price/NC_Data$bldggrade
NC_Data$PricePerBedrooms <- NC_Data$price/NC_Data$bedrooms
View(NCData.sf)
NCData.sf <-
NCData.sf %>%
mutate(
proj_nn1 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 1),
proj_nn2 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 2),
proj_nn3 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 3),
proj_nn4 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 4),
proj_nn5 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 5))
NCData.sf <-
NCData.sf %>%
mutate(
proj_nn1 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 1),
proj_nn2 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 2),
proj_nn3 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 3),
proj_nn4 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 4),
proj_nn5 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 5))
NC_Data$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
NC_Data$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NC_Data$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NC_Data$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NC_Data$year <- factor(NCData.sf$sale_year)
NC_Data$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
#building grade
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(grade)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("Charlotte,Grade"),
name="Quintile\nBreaks") +
labs(title="Grade, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("Charlotte,Grade"),
name="Quintile\nBreaks") +
labs(title="Grade, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("Charlotte,Building Age"),
name="Quintile\nBreaks") +
labs(title="Age, Charlotte") +
mapTheme()
View(NC_Data)
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("NCData, 0, 1, 2, 3, 4, 5, 6"),
name="Quintile\nBreaks") +
labs(title="Age, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("0 - Minimum", "1 - Fair", "2 - Average"),
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("Minimum" ,
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("Minimum,
"Fair,
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("Minimum,
Fair,
Average"),
name="Quintile\nBreaks") +
labs(title="Age, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("NC_Data$grade"),
name="Quintile\nBreaks") +
labs(title="Age, Charlotte") +
mapTheme()
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(Age)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=(NC_Data$grade),
name="Quintile\nBreaks") +
labs(title="Age, Charlotte") +
mapTheme()
ggplot()+
geom_sf(data = NCData.sf, aes(fill = grade),
color = "transparent")+
geom_sf(data = NCData.sf %>%
st_union(),
color = "grade",
fill = "transparent")+
labs(
title = "Percentage of vacant housing units by tract",
subtitle = "",
caption = "Data: US Census Bureau, ACS 5-year estimates")
Groceries.sf <-
Groceries %>%
st_as_sf(coords = c("Long", "Lat"), crs = "EPSG:4326") %>%
st_transform('ESRI:102286') %>%
distinct()
# Counts of grocery stores per buffer of house sale
NCData.sf$groceries.Buffer =
st_buffer(NCData.sf$geometry, 1609) %>%
aggregate(mutate(Groceries.sf, counter = 1),., sum) %>%
pull(counter)
NCData.sf <-
NCData.sf %>%
mutate(
grocery_nn1 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 1),
grocery_nn2 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 2),
grocery_nn3 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 3),
grocery_nn4 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 4),
grocery_nn5 = nn_function(st_coordinates(NCData.sf),
st_coordinates(Groceries.sf), k = 5))
NCData.sf <-
NCData.sf %>%
mutate(
proj_nn1 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 1),
proj_nn2 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 2),
proj_nn3 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 3),
proj_nn4 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 4),
proj_nn5 = nn_function(st_coordinates(NCData.sf),
st_coordinates(ImproveProj.sf), k = 5))
## Plot grocery density
ggplot() + geom_sf(data = Groceries, fill = "grey40") +
stat_density2d(data = data.frame(st_coordinates(Groceries.sf)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_gradient(low = "#25CB10", high = "#FA7800", name = "Density") +
scale_alpha(range = c(0.00, 0.35), guide = "none") +
labs(title = "Density of Grocery Stores, NC") +
mapTheme()
## Home Features cor
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, landusecod) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grade) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, percentheated) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
# You can set some global options for knitting chunks
knitr::opts_chunk$set(echo = TRUE)
# Load some libraries
library(tidyverse)
library(dplyr)
library(sf)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(grid)
library(ggplot2)
library(gridExtra)
library(ggcorrplot) # plot correlation plot
library(corrr)      # another way to plot correlation plot
library(kableExtra)
library(jtools)     # for regression model plots
library(ggstance) # to support jtools plots
library(ggpubr)    # plotting R^2 value on ggplot point scatter
library(broom.mixed) # needed for effects plots
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
# functions and data directory"
NC_Data = st_read("https://raw.githubusercontent.com/mafichman/MUSA_508_Lab/main/Midterm/data/2022/studentData.geojson")
head(NC_Data)
palette5 <- c("#25CB10", "#5AB60C", "#8FA108",   "#C48C04", "#FA7800")
NCData.sf <-
NC_Data %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
ImprovProj <-
st_read("Capital_Improvement_Projects_Points.geojson") %>%
st_transform('ESRI:102286')
ImproveProj.sf <-
ImprovProj %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
Groceries <- st_read("Grocery_Stores_(points).geojson")
Groceries.sf <-
Groceries %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286') %>%
distinct()
# 1 map of your dependent variable (sale price)
NC_Data$PricePerArea <- NC_Data$price/NC_Data$heatedarea
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(PricePerArea)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels= qBr(NCData.sf, "price"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Charlotte") +
mapTheme()
# Map of Independent Variable - Building Grade
NC_Data$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
NC_Data$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NC_Data$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NC_Data$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NC_Data$year <- factor(NCData.sf$sale_year)
NC_Data$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
# Building Grade Map
ggplot() +
geom_sf(data = NC_Data, aes(colour = q5(grade)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=("Charlotte,Grade"),
name="Quintile\nBreaks") +
labs(title="Grade, Charlotte") +
mapTheme()
# Age Map
ggplot()+
geom_sf(data = NCData.sf, aes(fill = NCData.sf),
color = "transparent")+
geom_sf(data = NCData.sf %>%
st_union(),
color = "grade",
fill = "transparent")+
labs(
title = "Percentage of vacant housing units by tract",
subtitle = "",
caption = "Data: US Census Bureau, ACS 5-year estimates")
## Plot grocery density
ggplot() + geom_sf(data = Groceries, fill = "grey40") +
stat_density2d(data = data.frame(st_coordinates(Groceries.sf)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_gradient(low = "#25CB10", high = "#FA7800", name = "Density") +
scale_alpha(range = c(0.00, 0.35), guide = "none") +
labs(title = "Density of Grocery Stores, NC") +
mapTheme()
## Home Features cor
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, percentheated) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, percentheated) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grade) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, grocery_nn1) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, Grocery_nn1) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
nc_sub_200k <- st_drop_geometry(NCData.sf) %>%
filter(price <= 2000000)
cor.test(nc_sub_200k$heatedarea,
nc_sub_200k$price,
method = "pearson")
ggscatter(nc_sub_200k,
x = "heatedarea",
y = "price",
add = "reg.line") +
stat_cor(label.y = 2500000)
st_drop_geometry(NCData.sf) %>%
dplyr::select(price, percentheated) %>%
filter(price <= 1000000) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables")
numericVars <-
select_if(nc_sub_200k, is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
type = "lower",
insig = "blank") +
labs(title = "Correlation across numeric variables")
# yet another way to plot the correlation plot using the corrr library
numericVars %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 2)
numericVars <-
select_if(nc_sub_200k, is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
type = "lower",
insig = "blank") +
labs(title = "Correlation across numeric variables")
livingReg <- lm(price ~ heatedarea, data = nc_sub_200k)
summary(livingReg)
ggscatter(nc_sub_200k,
x = "heatedarea",
y = "price",
add = "reg.line") +
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")), label.y = 2500000) +
stat_regline_equation(label.y = 2250000)
nc_sub_200k1 <- nc_sub_200k[nc_sub_200k$bedrooms <= 9,]
reg1 <- lm(price ~ ., data = nc_sub_200k1 %>%
dplyr::select(price, percentheated, ac, totalac, municipali,
storyheigh, numfirepla, fullbaths, halfbaths,
bedrooms, grade, Age, lagPrice))
reg1 <- lm(price ~ ., data = nc_sub_200k1 %>%
dplyr::select(price, percentheated, ac, totalac, municipali,
storyheigh, numfirepla, fullbaths, halfbaths,
bedrooms, grade, Age, lagPrice))
NC_Buffers <-
rbind(
st_buffer(NC_Data, 2640) %>%
mutate(Legend = "Buffer") %>%
dplyr::select(Legend),
st_union(st_buffer(NC_Data, 2640)) %>%
st_sf() %>%
mutate(Legend = "Unioned Buffer"))
NCData.sf$Age <- (2022 - as.numeric(NCData.sf$yearbuilt))
NCData.sf$ac <- ifelse(NCData.sf$actype == "AC-NONE", 0, 1)
building_grades <- c("MINIMUM","FAIR","AVERAGE","GOOD","VERY GOOD","EXCELLENT","CUSTOM")
NCData.sf$grade <- factor(NCData.sf$bldggrade, levels = building_grades, labels = 0:6)
NCData.sf$percentheated <- (NCData.sf$heatedarea/NCData.sf$shape_Area)
months <- c("01","02","03","04","05","06","07","08","09","10","11","12")
NCData.sf$year <- factor(NCData.sf$sale_year)
NCData.sf$month <- factor(substr(NCData.sf$dateofsale, 6, 7), months, labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
